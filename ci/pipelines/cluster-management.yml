---
resource_types:
- name: pool-trigger
  type: docker-image
  source:
    repository: cfmobile/pool-trigger

resources:
# - name: every-5-minutes
#   type: time
#   icon: clock-outline
#   source:
#     interval: 5m
#     start: 7:00 AM
#     stop: 7:00 PM
#     days: [Monday, Tuesday, Wednesday, Thursday, Friday]
#     location: America/Los_Angeles
#
# - name: after-8pm
#   type: time
#   icon: clock-outline
#   source:
#     start: 8:00 PM
#     stop: 8:30 PM
#     days: [Monday, Tuesday, Wednesday, Thursday, Friday]
#     location: America/Los_Angeles

- name: pool-repo
  type: git
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: building-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
    pool: k8s-dev/building

- name: building-pool-trigger
  type: pool-trigger
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
    pool: k8s-dev/building

# - name: ready-pool
#   type: pool
#   source:
#     uri: git@github.com:cloudfoundry/relint-ci-pools
#     private_key: ((relint_ci_pools_private_key))
#     pool: k8s-dev/ready

- name: destroy-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
    pool: k8s-dev/destroy

- name: destroy-pool-trigger
  type: pool-trigger
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
    pool: k8s-dev/destroy

jobs:
- name: check-pool-size
  plan:
  # - get: every-5-minutes
  #   trigger: true
  - try:
      task: check-pool-size
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            echo "Fail"
            exit 1
      on_failure:
        do:
        # Add unclaimed entry and give it a cool name
        - task: generate-random-name
          config:
            outputs:
            - name: new-lock
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
            run:
              path: /bin/bash
              args:
              - -ec
              - |
                echo lock-name > new-lock/name
                echo metadata-contents > new-lock/metadata
        - put: building-pool
          params: {add: new-lock}

- name: acquire-lock-for-create-cluster
  plan:
  - get: building-pool-trigger
    trigger: true
  - put: building-pool
    params: {acquire: true}

- name: create-cluster
  plan:
  - in_parallel:
    - get: building-pool
      version: every
      passed: [acquire-lock-for-create-cluster]
      trigger: true
    - get: pool-repo
  - task: create-cluster
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
      run:
        path: echo
        args: ["Hello, world!"]
  - task: promote-built-env
    # this task takes input called 'building-pool'
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
      inputs:
      - name: building-pool
      - name: pool-repo
      outputs:
      - name: updated-pool-repo
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_name=$(cat building-pool/name)
          shopt -s dotglob
          cp -pr pool-repo/* updated-pool-repo
          cd updated-pool-repo
          git mv k8s-dev/building/claimed/${env_name} k8s-dev/ready/unclaimed
          git config --global user.name "Environment Management Overlord"
          git config --global user.email "cf-release-integration+ci@pivotal.io"
          git commit -m"Promoting new ${env_name} environment to ready state"
  - put: pool-repo
    params:
      repository: updated-pool-repo
      rebase: true

# - name: spin-down-after-hours
#   plan:
#   - get: after-7pm
#     trigger: true
#   - get: pool-repo
#   - task: delete-unclaimed
#     # this moves everything from ready/unclaimed to destroy/unclaimed
#     config:
#       platform: linux
#       image_resource:
#         type: docker-image
#         source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
#       run:
#         path: /bin/bash
#         args:
#         - -ec
#         - |
#           cp -pr pool-repo updated-pool-repo
#           cd updated-pool-repo
#           git mv k8s-dev/ready/unclaimed/* k8s-dev/destroy/unclaimed
#           git ci -m'Destroying unclaimed K8s dev pool environments'
#   - put: pool-repo
#     params:

- name: acquire-lock-for-destroy-cluster
  plan:
  - get: destroy-pool-trigger
    trigger: true
  - put: destroy-pool
    params: {acquire: true}

- name: destroy-cluster
  plan:
  - in_parallel:
    - get: destroy-pool
      version: every
      passed: [acquire-lock-for-destroy-cluster]
      trigger: true
  - task: destroy-cluster
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
      run:
        path: echo
        args: ["Hello, world!"]
  - put: destroy-pool
    params: {remove: destroy-pool}

# - name: post-to-slack
#   plan:
#   - get: friday-afternoon
#     trigger: true
#   - get: ready-pool-repo
#   - task: generate-list-of-claimed-envs
#   - put: relint-slack
#     params:
#       something: something
